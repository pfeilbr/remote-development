// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Resources": Object {
    "Rule4C995B7F": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 4 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "Singleton8C7B99F3",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "RuleAllowEventRuletestSingletonEBBCDB00DAA3B746": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "Singleton8C7B99F3",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "Rule4C995B7F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Singleton8C7B99F3": Object {
      "DependsOn": Array [
        "SingletonServiceRoleDefaultPolicy7525C238",
        "SingletonServiceRoleDDD815CD",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3

region = \\"us-east-1\\"
instances = [\\"i-06c49f207e012e481\\"]
ec2 = boto3.client(\\"ec2\\", region_name=region)


def main(event, context):
    ec2.stop_instances(InstanceIds=instances)
    print(\\"stopped your instances: \\" + str(instances))
",
        },
        "Handler": "index.main",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonServiceRoleDDD815CD",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonServiceRoleDDD815CD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonServiceRoleDefaultPolicy7525C238": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:StartInstances",
                "ec2:StopInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonServiceRoleDefaultPolicy7525C238",
        "Roles": Array [
          Object {
            "Ref": "SingletonServiceRoleDDD815CD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
